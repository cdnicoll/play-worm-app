'use strict';

(function(angular, _, app) {
  app = angular.module('wormClientApp', [
    'ngAnimate',
    'ngCookies',
    'ngResource',
    'ngRoute',
    'ngSanitize',
    'ngTouch',
    // Controllers
    'wormClientApp.controllers.mainController',
    // Services
    'wormClientApp.services.WormService'
  ]);


  app.config(function($routeProvider) {
    /*
    $routeProvider.when('/', {
      templateUrl: 'views/main.html',
      controller: 'MainCtrl',
      controllerAs: 'MainCtrl'
    }).otherwise({
      redirectTo: '/'
    });
    */
  });
}).call(this, angular, _);


'use strict';

;
(function(angular, _, app) {
  app = angular.module('wormClientApp.controllers.mainController', []);

  app.controller('MainCtrl', [
    '$scope',
    'WormService',
    function($scope, WormService) {
      WormService.getHeroById(5).then(function(hero) {
        console.log(hero);
      });

    }
  ]);

}).call(this, angular, _);

'use strict';;
(function(angular, _, app) {
  app = angular.module('wormClientApp.services.WormService', []);


  /**
   * Declare Worm API Resource
   */
  app.factory('WormApiResource', ['$resource',
    function($resource) {
      var WormApiResource = {};

      // @TODO: make configurable
      var baseURI = CharacterOrganizer.baseUrl+'/client/character';

      WormApiResource.getHeroById = function() {
        return $resource(baseURI+'/:heroId', {}, {
          get: {
            method: 'GET'
          }
        })
      };

      return WormApiResource
    } // close factory
  ]);

  /**
   * Declare Worm API Service
   */
  app.service('WormService', ['WormApiResource', function(WormApiResource) {
      var WormApi = this;

      WormApi.getHeroById = function(id) {
        return WormApiResource.getHeroById().get({
          heroId: id
        }).$promise;
      }

    }]) // close service



}).call(this, angular, _);
